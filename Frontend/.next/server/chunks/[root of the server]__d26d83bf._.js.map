{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///Users/sudharshan/Documents/classyfyed/classyfyed-demo/Frontend/models/Otp.ts"],"sourcesContent":["import mongoose, { Schema, models } from 'mongoose';\n\nconst OtpSchema = new Schema({\n  email: { type: String, required: true, unique: true },\n  name: String,\n  otp: { type: Number, required: true },\n});\n\nexport default models.Otp || mongoose.model('Otp', OtpSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC3B,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,MAAM;IACN,KAAK;QAAE,MAAM;QAAQ,UAAU;IAAK;AACtC;uCAEe,yGAAA,CAAA,SAAM,CAAC,GAAG,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,OAAO","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///Users/sudharshan/Documents/classyfyed/classyfyed-demo/Frontend/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\n\nif (!MONGODB_URI) throw new Error('MONGODB_URI is not defined in .env.local');\n\nlet isConnected = false;\n\nexport const connectToDB = async () => {\n  if (isConnected) return;\n\n  try {\n    await mongoose.connect(MONGODB_URI);\n    isConnected = true;\n    console.log('✅ Connected to MongoDB');\n  } catch (error) {\n    console.error('❌ MongoDB connection error:', error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;AAElC,IAAI,cAAc;AAEX,MAAM,cAAc;IACzB,IAAI,aAAa;IAEjB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///Users/sudharshan/Documents/classyfyed/classyfyed-demo/Frontend/app/api/send-otp/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport nodemailer from \"nodemailer\";\nimport Otp from \"@/models/Otp\";\nimport { connectToDB } from \"@/lib/mongodb\";\n\nexport async function POST(req: NextRequest) {\n  const body = await req.json();\n  const { email } = body;\n\n  if (!email) {\n    return NextResponse.json({ message: \"Email is required\" }, { status: 400 });\n  }\n\n  const otp = Math.floor(1000 + Math.random() * 9000);\n\n  try {\n    await connectToDB();\n\n    const transporter = nodemailer.createTransport({\n      host: \"smtp.zoho.in\",\n      port: 465,\n      secure: true,\n      auth: {\n        user: process.env.ZOHO_USER,\n        pass: process.env.ZOHO_PASS,\n      },\n    });\n\n    await transporter.sendMail({\n        from: `\"Classyfyed\" <${process.env.ZOHO_USER}>`,\n        to: email,\n        subject: 'Your Classyfyed Login OTP – Secure Access to Your Account',\n        html: `\n          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #eaeaea; border-radius: 8px; background-color: #ffffff;\">\n            <h2 style=\"color: #194EB4;\">Welcome back to <span style=\"color: #AC67DE;\">Classyfyed</span>!</h2>\n            <p style=\"font-size: 16px; color: #333333;\">\n              Use the One-Time Password (OTP) below to complete your login. This OTP is valid for 5 minutes.\n            </p>\n            <div style=\"text-align: center; margin: 30px 0;\">\n              <div style=\"display: inline-block; text: linear-gradient(to right, #194EB4, #AC67DE); padding: 14px 28px; font-size: 24px; font-weight: bold; letter-spacing: 8px; border-radius: 6px;\">\n                ${otp}\n              </div>\n            </div>\n            <p style=\"font-size: 14px; color: #555555; text-align: center;\">\n              If you didn’t request this OTP, please ignore this email or contact our support team.\n            </p>\n            <hr style=\"margin: 30px 0; border: none; border-top: 1px solid #eaeaea;\">\n            <p style=\"font-size: 12px; color: #999999; text-align: center;\">\n              © ${new Date().getFullYear()} Classyfyed. All rights reserved.\n            </p>\n          </div>\n        `,\n      });\n      \n\n    await Otp.findOneAndUpdate(\n      { email },\n      { email, otp },\n      { upsert: true, new: true, setDefaultsOnInsert: true }\n    );\n\n    return NextResponse.json({ message: \"OTP sent successfully\", success: true });\n  } catch (err) {\n    console.error(err);\n    return NextResponse.json({ message: \"Failed to send OTP\", success: false }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,IAAI,CAAC,OAAO;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAoB,GAAG;YAAE,QAAQ;QAAI;IAC3E;IAEA,MAAM,MAAM,KAAK,KAAK,CAAC,OAAO,KAAK,MAAM,KAAK;IAE9C,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,cAAW,AAAD;QAEhB,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,MAAM;YACN,MAAM;YACN,QAAQ;YACR,MAAM;gBACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;gBAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC7B;QACF;QAEA,MAAM,YAAY,QAAQ,CAAC;YACvB,MAAM,CAAC,cAAc,EAAE,QAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAC/C,IAAI;YACJ,SAAS;YACT,MAAM,CAAC;;;;;;;;gBAQC,EAAE,IAAI;;;;;;;;gBAQN,EAAE,IAAI,OAAO,WAAW,GAAG;;;QAGnC,CAAC;QACH;QAGF,MAAM,+GAAA,CAAA,UAAG,CAAC,gBAAgB,CACxB;YAAE;QAAM,GACR;YAAE;YAAO;QAAI,GACb;YAAE,QAAQ;YAAM,KAAK;YAAM,qBAAqB;QAAK;QAGvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAyB,SAAS;QAAK;IAC7E,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAsB,SAAS;QAAM,GAAG;YAAE,QAAQ;QAAI;IAC5F;AACF","debugId":null}}]
}